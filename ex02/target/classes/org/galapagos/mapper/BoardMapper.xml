<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.galapagos.mapper.BoardMapper">

	<sql id="criteria">
		<trim prefixOverrides="OR">
			<foreach item="type" collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							title like CONCAT('%',#{keyword},'%')
						</when>
						<when test="type == 'C'.toString()">
							content like CONCAT('%',#{keyword},'%')
						</when>
						<when test="type == 'W'.toString()">
							writer like CONCAT('%',#{keyword},'%') </when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>

	<select id="getList" resultType="BoardVO">
		<!-- xml의 특수 태그, CDATA의 뜻 : CompiledDATA -> 이미 컴파일이 되어있으므로 그냥 쓰면 된다는 의미임. 
			CDATA 쓰는 이유 : where절을 쓴다고 가정했을 때, 꺽쇠 부분 때문에 => where bro <10; -->
		<!-- <![CDATA[ select * from tbl_board ]]> -->
		select * from tbl_board
	</select>

	<!-- 호출 시 객체 1개가 매개변수로 전달됨. -->
	<insert id="insert">
		insert into tbl_board(title, content, writer)
		values
		(#{title}, #{content}, #{writer})
	</insert>

	<insert id="insertSelectKey">
		insert into tbl_board(title, content, writer)
		values (#{title},
		#{content}, #{writer})

		<!-- table pk 필드명 : bno / keyColumn은 setBno로 값을 세팅하라는 뜻임. -->
		<selectKey resultType="Long" keyProperty="bno"
			keyColumn="bno" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<!-- #{변수명}의 변수명은 아무 이름이나 들어가도 상관 없음. -->
	<!-- 매개변수 primitive 값 1개 (String) == #{bno} -->
	<!-- resultType은 생략해도 상관 없음. -->
	<!-- bno는 primary key임. -->
	<select id="read" resultType="BoardVO">
		select * from tbl_board where bno =
		#{bno}
	</select>

	<delete id="delete">
		delete from tbl_board where bno = #{bno}
	</delete>

	<update id="update">
		update tbl_board set
		title = #{title},
		content =
		#{content},
		writer = #{writer},
		update_date = now()
		where bno = #{bno}
	</update>

	<!-- <select id="getListWithPaging" resultType="BoardVO"> <![CDATA[ select 
		bno, title, content, writer, reg_date, update_date from tbl_board limit 0, 
		10 ]]> </select> -->

	<!-- <select id="getListWithPaging" resultType="BoardVO"> <![CDATA[ select 
		bno, title, content, writer, reg_date, update_date from tbl_board limit (#{pageNum} 
		-1) * #{amount} , #{amount} ]]> </select> -->

	<!-- <select id="getListWithPaging" resultType="BoardVO"> <![CDATA[ select 
		bno, title, content, writer, reg_date, update_date from tbl_board limit #{offset} 
		, #{amount} ]]> </select> -->
	<!-- <select id="getListWithPaging" resultType="BoardVO"> select * from 
		tbl_board <where> <trim prefixOverrides = "OR"> <foreach item="type" collection="typeArr"> 
		<trim prefix="OR"> <choose> <when test="type == 'T'.toString()"> title like 
		CONCAT('%', #{keyword}, '%') </when> <when test="type == 'C'.toString()"> 
		content like CONCAT('%', #{keyword}, '%') </when> <when test="type == 'W'.toString()"> 
		writer like CONCAT('%', #{keyword}, '%') </when> </choose> </trim> </foreach> 
		</trim> </where> order by bno desc limit #{offset}, #{amount} </select> -->
	<!-- <select id="getTotalCount" resultType="int"> select count(*) from tbl_board; 
		</select> -->
	<select id="getListWithPaging" resultType="BoardVO">
		select * from tbl_board
		<where>
			<include refid="criteria"></include>
		</where>
		order by bno desc
		limit #{offset}, #{amount}
		<!-- 여기서 #{offset}은 #({pageNum} -1) * #{amount} 이며, 수식은 oracle은 되지만, mysql은 
			불가해서 그런 것이다. -->
	</select>
	<select id="getTotalCount" resultType="int">
		select count(*) from tbl_board
		<where>
			<include refid="criteria"></include>
		</where>
	</select>
</mapper>